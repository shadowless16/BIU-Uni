openapi: 3.0.3
info:
  title: University Clearance System API
  version: 1.0.0
  description: API contract for department, student, clearance, approval, notification, and authentication endpoints.
servers:
  - url: http://localhost:3000/api
paths:
  /departments:
    get:
      summary: Get all departments
      responses:
        '200':
          description: List of departments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
    post:
      summary: Create a department
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '201':
          description: Created department
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
  /departments/{id}:
    get:
      summary: Get a department by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Department details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
    put:
      summary: Update a department
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          description: Updated department
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
    delete:
      summary: Delete a department
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Department deleted
  /students:
    get:
      summary: Get all students
      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Create a student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Created student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
  /students/{id}:
    get:
      summary: Get a student by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Student details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    put:
      summary: Update a student
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Updated student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    delete:
      summary: Delete a student
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Student deleted
  /clearance-requests:
    get:
      summary: Get all clearance requests
      responses:
        '200':
          description: List of clearance requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClearanceRequest'
    post:
      summary: Create a clearance request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearanceRequest'
      responses:
        '201':
          description: Created clearance request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearanceRequest'
  /clearance-requests/{id}:
    get:
      summary: Get a clearance request by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Clearance request details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearanceRequest'
    put:
      summary: Update a clearance request
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearanceRequest'
      responses:
        '200':
          description: Updated clearance request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearanceRequest'
    delete:
      summary: Delete a clearance request
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Clearance request deleted
  /approvals:
    get:
      summary: Get all approvals
      responses:
        '200':
          description: List of approvals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Approval'
  /approvals/{id}:
    get:
      summary: Get an approval by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Approval details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
    patch:
      summary: Approve or reject a request
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [approved, rejected]
                comment:
                  type: string
      responses:
        '200':
          description: Updated approval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
  /notifications:
    get:
      summary: Get all notifications
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
  /notifications/{id}:
    patch:
      summary: Mark notification as read
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                read:
                  type: boolean
      responses:
        '200':
          description: Updated notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Registered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /auth/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /auth/me:
    get:
      summary: Get current user
      responses:
        '200':
          description: Current user info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    Department:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        contact:
          type: string
        staff:
          type: array
          items:
            type: string
        approvalSettings:
          type: object
    Student:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        departmentId:
          type: string
        clearanceStatus:
          type: string
        documents:
          type: array
          items:
            type: string
    ClearanceRequest:
      type: object
      properties:
        id:
          type: string
        studentId:
          type: string
        departmentId:
          type: string
        status:
          type: string
        history:
          type: array
          items:
            type: string
    Approval:
      type: object
      properties:
        id:
          type: string
        clearanceRequestId:
          type: string
        departmentId:
          type: string
        status:
          type: string
        comment:
          type: string
    Notification:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        message:
          type: string
        read:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
        token:
          type: string
